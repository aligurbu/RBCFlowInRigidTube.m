%% Load the model specific parameters
%% 
name = 'ElasRBC_Short_Pr4_2_Time0_75s';

%% Reference parameters 
ReferenceParameters

%% Description of the tube model
% The vessel boundary is partitioned into the inlet, outlet and sidewall 
% in order to assign the Dirichlet and Neumann boundary conditions on the 
% relevant part of the boundaries. 
% The extracellular plasma flow is generated by imposing the pressure 
% gradient along the vessel length by applying a prescribed pressure on the
% inlet surface and setting the outlet surface to be the traction-free 
% surface (zero-pressure). These traction boundary conditions on the inlet 
% and outlet surfaces are referred to as the Neumann boundary conditions. 
% The zero-velocity field (no-slip condition) is assumed on the vessel 
% sidewall which amounts to the Dirichlet boundary condition. 

%% Load mesh
%% Vessel models
load ShortMicrocapillary_16El.mat

%% Parameters 
%% Fluid properties
%% Viscosity of exterior fluid
mu_out = 1.2*10^(-3); % Pa.s 
mu = mu_out/RefViscosity; 
%% Viscosity of interior fluid
mu_in = 6*10^(-3); % Pa.s
lam = mu_in/RefViscosity; % lam*mu

%% Shell properties
%% Material properties 
ShearModulus = 5.3*10^(-6); % N/m
ES = ShearModulus/RefElasticModulus; % inplane shear modulus
BendingModulus = 2*10^(-19); % N.m
EB = BendingModulus/RefBendingModulus; % bending modulus
DilatationModulus = 50*ShearModulus; % N/m
ED = DilatationModulus/RefElasticModulus; % inplane dilatational modulus

%% Standard-Linear-Solid SLS model parameters
%% Membrane viscosity
MembraneViscoelasticity = false;
mu_Membrane = 3.18*10^(-7); % m.Pa.s=N.s/m
mu_Mem = mu_Membrane/(RefLength*RefViscosity); % Bq, the Boussinesq number
ArtificialSpring = 100/3 * ShearModulus; % N/m 
% ArtificialSpring = 6*ShearModulus; % N/m 
RelaxationTime = mu_Membrane / ArtificialSpring; % s 
Tau = RelaxationTime*RefShearRate; % the relaxation time of the Maxwell element

%% Applied inlet pressure 
PressureGradient = 4.2; % mmHg/mm
% 1 mmHg = 133.322 Pa
PressureGradient = PressureGradient*133.322*10^(3); % Pa/meter
PressureDrop = PressureGradient*(TubeLength*RefLength); % Pa
InletPressure = PressureDrop/RefPressure; % Inlet pressure

%% Constitutive equations for membrane mechanics
StVenantKirchhoff = false;
NeoHookean = false;
Skalak = true;

%% Degree of spherical harmonic expansion
N = 16;
UpSampleFactor = 2; % Up-sample ratio for the force calculations
NGSphere = 2*N; % Quadrature on sphere parameter
N_EqSpaced = 2*N;

%% Initial position and orientation
InitXi = [0; 0; 0];
InitOrient = expm(hat([0; 0; 0]*pi/2));

%% The tolerance of the GMRES method
ToleranceGMRES = 10^(-6);

%% Time step
%% Forward Euler
TimeIncrement = 5*10^(-6); % s
DT = TimeIncrement*RefShearRate;
EndTime_ = 0.75; % s
EndTime = EndTime_*RefShearRate;
NSTEPS = ceil(EndTime/DT);

SaveAtIncrementalSteps = 50; % Save the data at the increment of this steps

%% Adaptive time-stepping parameters
Time = 0;
maxCounterTime = 100;
counterTime = 1;
IterationCounter = zeros(maxCounterTime,1);
stableCounter = 1;
maxDT = 0.1; % declaring very high number to initialize it.
minDT = DT;
maxStableDT = 0;

%% Gauss quadrature for the regular integrals
%% $\chi \not\in \Gamma_e$ 
numGaussPoints = 10;
[gx, gw] = lgwt(numGaussPoints, -1, 1);

%% Gauss quadrature for the weakly- and nearly-singular integrals 
%% $\chi \in \Gamma_e$ or dmin/LengE < 1
numGaussPointsPolar = 20;
%% Gauss point and weights along the radius and theta in polar coordinates
[grx, grw] = lgwt(numGaussPointsPolar, -1, 1); 
[gtx, gtw] = lgwt(numGaussPointsPolar, -1, 1); 

%% Set-up
numNodes = size(coord,2); % Total number of nodes in the model

numElem = size(connect,2); % Total number of elements in the model

numDofPerNode = size(coord,1); % Number of velocity components

numNodesPerElem = size(connect,1); % Number of nodes per element

numDofPerElem = numNodesPerElem * numDofPerNode; 
                                 % Number of DOF associated with an element
ModelSize = (numNodes*numDofPerNode + 3*(N+1)^2);






